/** * LinearNode represents a node in a linked list. * * @author Dr. Lewis * @author Dr. Chase * @version 1.0, 08/13/08 */public class LinearNode<E>{    private LinearNode<E> next;    private E element;        /**     * Creates an empty node.     */    public LinearNode()    {        next = null;        element = null;    }        /**     * Creates a node storing the specified element.     *     * @param elem  the element to be stored within the new node     */    public LinearNode (E elem)    {        next = null;        element = elem;    }        /**     * Returns the node that follows this one.     *     * @return  the node that follows the current one     */    public LinearNode<E> getNext()    {        return next;    }        /**     * Sets the node that follows this one.     *     * @param node  the node to be set to follow the current one     */    public void setNext (LinearNode<E> node)    {        next = node;    }        /**     * Returns the element stored in this node.     *     * @return  the element stored in this node     */    public E getElement()    {        return element;    }        /**     * Sets the element stored in this node.     *     * @param elem  the element to be stored in this node     */    public void setElement (E elem)    {        element = elem;    }    public static void main(String []args){        LinearNode<Integer> node1 = new LinearNode<Integer>(1);        LinearNode<Integer> node2 = new LinearNode<Integer>(2);        LinearNode<Integer> node3 = new LinearNode<Integer>(3);        LinearNode<Integer> node4 = new LinearNode<Integer>(4);        LinearNode<Integer> node5 = new LinearNode<Integer>(5);        node1.setNext(node2);        node2.setNext(node3);        node3.setNext(node4);        node4.setNext(node5);        LinearNode current = node1;        while (current != null){            System.out.print(current.getElement() + " -> ");            current = current.getNext();        }        System.out.println();    }}